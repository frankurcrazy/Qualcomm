<job id="QXDM RegisterQueueClient Example">
<script language="JScript" src="HelperFunctions.js" />
<script language="JScript">

// NOTE: This script must be run from CScript in a command box,
// i.e. CScript QXDMRegisterQueueClient.wsf

// This script demostrates usage of the IQXDM2 automation
// interface method RegisterQueueClient()

// Global variables
var QXDM;
var QXDM2;

// Initialize application
function Initialize()
{
   // Assume failure
   var RC = false;
   var Txt = "";

   // Create QXDM object
   QXDM = new ActiveXObject( "QXDM.Application" );
   if (QXDM == null)
   {
      Txt = "Error launching QXDM";
      WScript.StdOut.WriteLine( Txt );

      return RC;
   }

   // Create QXDM2 interface
   QXDM2 = QXDM.GetIQXDM2();
   if (QXDM2 == null)
   {
      Txt = "QXDM does not support required interface";
      WScript.StdOut.WriteLine( Txt );

      return RC;
   }

   SetQXDM( QXDM );
   SetQXDM2( QXDM2 );

   // Success
   RC = true;
   return RC;
}

// Demonstrate registering a queue client
function RegisterQueueClient()
{
   var Txt = "";

   // Register a QXDM client
   var Handle = QXDM2.RegisterQueueClient( 256 );
   if (Handle == 0xFFFFFFFF)
   {
      Txt = "Unable to create client";
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   var Client = QXDM2.ConfigureClientByKeys( Handle );
   if (Client == null)
   {
      Txt = "Unable to configure client by keys";
      WScript.StdOut.WriteLine( Txt );

      QXDM2.UnregisterClient( Handle );
      return;
   }

   // Register for strings
   Client.AddItem( ITEM_TYPE_STRING );
   Client.CommitConfig();

   Txt = "Adding 300 strings to item store";
   WScript.StdOut.WriteLine( Txt );

   // Add strings to QXDM item store
   var Str = "";
   for (var i = 0; i < 300; i++)
   { 
      Str = "Test String " + i;
      QXDM.QXDMTextOut( Str );
   }

   // Output number of items in the client 
   var ItemCount = QXDM2.GetClientItemCount( Handle );

   Txt = "Number of items in client: " + ItemCount;
   WScript.StdOut.WriteLine( Txt );
   
   // Determine index of first accessible item in client
   var Index = 0;
   while (Index < 300)
   {
      var Item = QXDM2.GetClientItem( Handle, Index );
      if (Item != null)
      {
         break;
      }
      
      Index++;
   }
   
   if (Index == 300)
   {
      Txt = "Unable to determine first accessible client item index";
      WScript.StdOut.WriteLine( Txt );
   }
   else
   {
      Txt = "First accessible client item index: " + Index;
      WScript.StdOut.WriteLine( Txt );
   }
   
   // Unregister the client
   QXDM2.UnregisterClient( Handle );   
}

// Main body of script
function Execute()
{
   // Launch QXDM
   var RC = Initialize();
   if (RC == false)
   {
      return;
   }

   // Get QXDM version
   var Version = QXDM.AppVersion;
   var Txt = "QXDM Version: " + Version;
   WScript.StdOut.WriteLine( Txt );

   // Demonstrate registering a queue client
   RegisterQueueClient();
}

Execute();

</script>
</job>