<job id="QXDM GetItem Example">
<script language="JScript" src="HelperFunctions.js" />
<script language="JScript">

// NOTE: This script must be run from CScript in a command box,
// i.e. CScript QXDMGetItem.wsf

// This script demostrates usage of the QXDM2 automation
// interface method GetItem

// Global variables
var QXDM;
var QXDM2;

// Initialize application
function Initialize()
{
   // Assume failure
   var RC = false;
   var Txt = "";

   // Create QXDM object
   QXDM = new ActiveXObject( "QXDM.Application" );
   if (QXDM == null)
   {
      Txt = "Error launching QXDM";
      WScript.StdOut.WriteLine( Txt );

      return RC;
   }

   // Create QXDM2 interface
   QXDM2 = QXDM.GetIQXDM2();
   if (QXDM2 == null)
   {
      Txt = "QXDM does not support required interface";
      WScript.StdOut.WriteLine( Txt );

      return RC;
   }

   SetQXDM( QXDM );
   SetQXDM2( QXDM2 );

   // Success
   RC = true;
   return RC;
}

// Obtain and dump details of last item in the QXDM item store
function DumpLastItem()
{
   var Txt = "";
   var FieldPadding = 5;

   // Get number of items in item store
   var ItemCount = QXDM2.GetItemCount();
   if (ItemCount == 0)
   {
      Txt = "No items in the QXDM item store";
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   // Get an item from the QXDM item store
   var Item = QXDM2.GetItem( ItemCount - 1 );
   if (Item == null)
   {
      Txt = "GetItem failed";
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   Txt = "GetItem() succeeded\n"
       + "Displaying item # " + (ItemCount - 1) + ":";
   WScript.StdOut.WriteLine( Txt );

   DumpItemDetails( Item, FieldPadding );
}

// Main body of script
function Execute()
{
   // Launch QXDM
   var RC = Initialize();
   if (RC == false)
   {
      return;
   }

   // Get QXDM version
   var Version = QXDM.AppVersion;
   var Txt = "QXDM Version: " + Version;
   WScript.StdOut.WriteLine( Txt );

   // Dump out the last item
   DumpLastItem();
}

Execute();

</script>
</job>