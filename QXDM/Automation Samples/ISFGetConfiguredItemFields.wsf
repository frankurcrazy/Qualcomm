<job id="ISF GetConfiguredItemFields Example">
<script language="JScript" src="HelperFunctions.js" />
<script language="JScript">

// NOTE: This script must be run from CScript in a command box,
// i.e. CScript ISFGetConfiguredItemFields.wsf

// This script demostrates usage of the IColorItem automation
// interface method GetConfiguredItemFields()

// Global variables
var IISF;

// Initialize application
function Initialize()
{
   // Assume failure
   var RC = false;
   var Txt = "";

   // Create the item store file interface
   IISF = new ActiveXObject( "DMCoreAutomation.ItemStoreFiles" );
   if (IISF == null)
   {
      WScript.StdOut.WriteLine( "Unable to obtain ISF interface" );
      return RC;
   }

   // Success
   RC = true;
   return RC;
}

// Get file name from script folder path
function GetFileName()
{
   var FileName = "";
   var FolderPath = GetPathFromScript();

   // Item store file name
   FileName = FolderPath + "Example.isf";
   return FileName;
}

// Test performance of GetConfiguredItemFields()
function RunIndividualTest( Item, FieldStrings, FieldNames )
{
   var StartTime = new Date();
   var ParsedFields = 0;
   var Runs = 50000;

   var Txt = "Measuring GetConfiguredItemFields( \"\", "
           + FieldStrings + ", "
           + FieldNames + " ) performance";

   WScript.StdOut.WriteLine( Txt );

   for (var R = 0; R < Runs; R++)
   {
      var Fields = Item.GetConfiguredItemFields( "",
                                                 FieldStrings,
                                                 FieldNames );

      if (Fields == null)
      {
         Txt = "Unable to retrieve fields for item";
         WScript.StdOut.WriteLine( Txt );

         return RC;
      }

      ParsedFields += Fields.GetFieldCount();
   }

   var EndTime = new Date();
   var Ticks = EndTime.valueOf() - StartTime.valueOf();
   if (Ticks == 0)
   {
      Ticks = 1;
   }

   var Secs = Ticks / 1000;
   var Rate = Runs / Secs;

   Txt = "Processed " + Runs + " items in " + Secs.toFixed( 2 )
       + " seconds (" + Rate.toFixed( 2 ) + " items/s)";

   WScript.StdOut.WriteLine( Txt );

   Rate = ParsedFields / Secs;
   Txt = "Processed " + ParsedFields + " fields in " + Secs.toFixed( 2 )
       + " seconds (" + Rate.toFixed( 2 ) + " fields/s)\n";

   WScript.StdOut.WriteLine( Txt );
}

// Test performance of all GetConfiguredItemFields() variants
function RunTest()
{
   var Txt = "";

   // Generate item store file name
   var FileName = GetFileName();
   if (FileName == "")
   {
      return;
   }

   // Load the item store file
   var Handle = IISF.LoadItemStore( FileName );
   if (Handle == 0xFFFFFFFF)
   {
      Txt = "Unable to load ISF:\n" + FileName;
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   // Retrieve item from example ISF
   var Item = IISF.GetItem( Handle, 3 );
   if (Item == null)
   {
      Txt = "Unable to retrieve item";
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   RunIndividualTest( Item, true, true );
   RunIndividualTest( Item, false, true );
   RunIndividualTest( Item, false, false );
}

// Main body of script
function Execute()
{
   var RC = Initialize();
   if (RC == false)
   {
      return;
   }

   RunTest();
}

Execute();

</script>
</job>