<job id="ISF GetItemType Example">
<script language="JScript" src="HelperFunctions.js" />
<script language="JScript">

// NOTE: This script must be run from CScript in a command box,
// i.e. CScript ISFGetItemType.wsf

// This script demostrates usage of the IColorItem automation
// interface method GetItemType()

// Global variables
var IISF;

// Initialize application
function Initialize()
{
   // Assume failure
   var RC = false;
   var Txt = "";

   // Create the item store file interface
   IISF = new ActiveXObject( "DMCoreAutomation.ItemStoreFiles" );
   if (IISF == null)
   {
      WScript.StdOut.WriteLine( "Unable to obtain ISF interface" );
      return RC;
   }

   // Success
   RC = true;
   return RC;
}

// Get file name from script folder path
function GetFileName()
{
   var FileName = "";
   var FolderPath = GetPathFromScript();

   // Item store file name
   FileName = FolderPath + "Example.isf";
   return FileName;
}

// Dump the type of an item
function DumpItemType()
{
   var Txt = "";

   // Generate item store file name
   var FileName = GetFileName();
   if (FileName == "")
   {
      return;
   }

   // Load the item store file
   var Handle = IISF.LoadItemStore( FileName );
   if (Handle == 0xFFFFFFFF)
   {
      Txt = "Unable to load ISF:\n" + FileName;
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   // Retrieve item from example ISF
   var Item = IISF.GetItem( Handle, 3 );
   if (Item == null)
   {
      Txt = "Unable to retrieve item";
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   var Type = Item.GetItemType();
   if (Type == 0xFFFFFFFF)
   {
      Txt = "Unable to retrieve item type";
      WScript.StdOut.WriteLine( Txt );

      return;
   }

   var Types = new Array();
   Types[0] = "\'DIAG Malformed Packet\'"; 
   Types[1] = "\'DIAG Response\'"; 
   Types[2] = "\'DIAG Request\'"; 
   Types[3] = "\'GPS Report\'"; 
   Types[4] = "\'Event Report\'"; 
   Types[5] = "\'Log Packet\'"; 
   Types[6] = "\'Message Packet\'"; 
   Types[7] = "\'String\'"; 
   Types[8] = "\'Log Packet (OTA)\'"; 
   Types[9] = "\'Subsystem Dispatch Response\'"; 
   Types[10] = "\'Subsystem Dispatch Request\'";   

   var TypeStr = "\'Unknown\'";
   if (Type in Types)
   {
      TypeStr = Types[Type];
   }

   TypeStr += " (" + Type + ")";

   Txt = "Item type is " + TypeStr;
   WScript.StdOut.WriteLine( Txt );
}

// Main body of script
function Execute()
{
   var RC = Initialize();
   if (RC == false)
   {
      return;
   }

   // Dump the type of an item
   DumpItemType();
}

Execute();

</script>
</job>